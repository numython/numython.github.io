<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Numython (Publicaciones sobre pylab)</title><link>https://numython.github.io/</link><description></description><atom:link href="https://numython.github.io/categories/pylab.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Thu, 05 Apr 2018 01:24:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Una introducción a Pylab</title><link>https://numython.github.io/posts/2016/01/una-introduccion-pylab/</link><dc:creator>Pedro Jorge De Los Santos</dc:creator><description>&lt;p&gt;Pylab es un módulo de Matplotlib que, básicamente, integra en un mismo espacio de nombres utilidades gráficas del módulo pyplot y las numéricas de NumPy, resultando un entorno que se asemeja a MATLAB en el manejo de matrices/vectores y el trazo de gráficas.&lt;br&gt;&lt;br&gt;Para importar todas las funciones de pylab podemos hacerlo como sigue:&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="im"&gt;from&lt;/span&gt; pylab &lt;span class="im"&gt;import&lt;/span&gt; &lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;Con esto tendremos disponible todas las funciones y/o constantes en el espacio de trabajo actual.&lt;br&gt;&lt;h2 id="matrices-y-vectores"&gt;Matrices y vectores&lt;/h2&gt;Algo básico que podemos hacer con Pylab es crear con vectores y matrices de una forma rápida:&lt;br&gt;&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; v&lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt;array([&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;]) &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;#Definiendo un vector&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; v&lt;br&gt;array([&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;])&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A&lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt;array([[&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;],[&lt;span class="dv" style="color: #40a070;"&gt;8&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;10&lt;/span&gt;],[&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;]]) &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Definiendo una matriz&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A&lt;br&gt;array([[ &lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;],&lt;br&gt;       [ &lt;span class="dv" style="color: #40a070;"&gt;8&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;, &lt;span class="dv" style="color: #40a070;"&gt;10&lt;/span&gt;],&lt;br&gt;       [&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;]])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;Realizar operaciones matriciales básicas:&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; B&lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt;array([[&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;],[&lt;span class="dv" style="color: #40a070;"&gt;7&lt;/span&gt;,&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;9&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;],[&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;]])&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Suma de matrices&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A&lt;span class="op" style="color: #666666;"&gt;+&lt;/span&gt;B&lt;br&gt;array([[ &lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;4&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;],&lt;br&gt;       [&lt;span class="dv" style="color: #40a070;"&gt;15&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;7&lt;/span&gt;, &lt;span class="dv" style="color: #40a070;"&gt;12&lt;/span&gt;],&lt;br&gt;       [&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;4&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;6&lt;/span&gt;]])&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Resta de matrices&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;B&lt;br&gt;array([[ &lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;6&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;],&lt;br&gt;       [ &lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;, &lt;span class="dv" style="color: #40a070;"&gt;11&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;8&lt;/span&gt;],&lt;br&gt;       [&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;6&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;]])&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Multiplicación matricial&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; dot(A,B)&lt;br&gt;array([[&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;11&lt;/span&gt;,   &lt;span class="dv" style="color: #40a070;"&gt;9&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;17&lt;/span&gt;],&lt;br&gt;       [ &lt;span class="dv" style="color: #40a070;"&gt;32&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;32&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;34&lt;/span&gt;],&lt;br&gt;       [ &lt;span class="dv" style="color: #40a070;"&gt;12&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;40&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;13&lt;/span&gt;]])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;div style="text-align: justify;"&gt;Note que la multiplicación matricial se debe realizar con la función &lt;code style="white-space: pre;"&gt;dot&lt;/code&gt;, si se efectúa la multiplicación con el operador &lt;code style="white-space: pre;"&gt;*&lt;/code&gt;, este dará el resultado de una multiplicación elemento por elemento.&lt;/div&gt;&lt;br&gt;También se pueden utilizar algunas funciones típicas de un paquete de álgebra lineal para operar sobre matrices:&lt;br&gt;&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; det(A) &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Determinante de A&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="fl" style="color: #40a070;"&gt;69.999999999999957&lt;/span&gt;&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; inv(A) &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Matriz inversa de A&lt;/span&gt;&lt;br&gt;array([[  &lt;span class="fl" style="color: #40a070;"&gt;2.00000000e-01&lt;/span&gt;,   &lt;span class="fl" style="color: #40a070;"&gt;1.00000000e-01&lt;/span&gt;,   &lt;span class="fl" style="color: #40a070;"&gt;2.77555756e-17&lt;/span&gt;],&lt;br&gt;       [  &lt;span class="fl" style="color: #40a070;"&gt;1.05714286e+00&lt;/span&gt;,   &lt;span class="fl" style="color: #40a070;"&gt;3.14285714e-01&lt;/span&gt;,   &lt;span class="fl" style="color: #40a070;"&gt;7.14285714e-01&lt;/span&gt;],&lt;br&gt;       [ &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="fl" style="color: #40a070;"&gt;3.71428571e-01&lt;/span&gt;,  &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="fl" style="color: #40a070;"&gt;4.28571429e-02&lt;/span&gt;,  &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="fl" style="color: #40a070;"&gt;1.42857143e-01&lt;/span&gt;]])&lt;br&gt;&lt;span class="op" style="color: #666666;"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; transpose(A) &lt;span class="co" style="color: #60a0b0; font-style: italic;"&gt;# Transpuesta de A&lt;/span&gt;&lt;br&gt;array([[ &lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;8&lt;/span&gt;, &lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;],&lt;br&gt;       [&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;],&lt;br&gt;       [&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;5&lt;/span&gt;, &lt;span class="dv" style="color: #40a070;"&gt;10&lt;/span&gt;,  &lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;]])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="gráficas"&gt;Gráficas&lt;/h2&gt;Otra utilidad de pylab son las gráficas, es tan sencillo como utilizar la función &lt;code style="white-space: pre;"&gt;plot&lt;/code&gt;:&lt;br&gt;&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;plot([&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;3&lt;/span&gt;,&lt;span class="op" style="color: #666666;"&gt;-&lt;/span&gt;&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;])&lt;br&gt;show()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-NDzbeobvPpc/VqabJkxzgVI/AAAAAAAABsM/qvRtaiVgD4k/s1600/img_01.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="300" src="https://3.bp.blogspot.com/-NDzbeobvPpc/VqabJkxzgVI/AAAAAAAABsM/qvRtaiVgD4k/s400/img_01.png" width="400"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;Si se requiere algo más elaborado:&lt;br&gt;&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;x &lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt; linspace(&lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;10&lt;/span&gt;)&lt;br&gt;y &lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt; exp(&lt;span class="fl" style="color: #40a070;"&gt;0.1&lt;/span&gt;&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;x)&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;cos(x)&lt;br&gt;&lt;br&gt;plot(x,y,&lt;span class="st" style="color: #4070a0;"&gt;'k'&lt;/span&gt;)&lt;br&gt;xlabel(&lt;span class="st" style="color: #4070a0;"&gt;"Tiempo (s)"&lt;/span&gt;)&lt;br&gt;ylabel(&lt;span class="st" style="color: #4070a0;"&gt;"Amplitud (mm)"&lt;/span&gt;)&lt;br&gt;title(&lt;span class="st" style="color: #4070a0;"&gt;u"Gráfica 01"&lt;/span&gt;)&lt;br&gt;grid(&lt;span class="va" style="color: #19177c;"&gt;True&lt;/span&gt;)&lt;br&gt;show()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-fb_JwwRq2lg/VqabJrY5eWI/AAAAAAAABsQ/lSzlEsGbzN0/s1600/img_02.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="300" src="https://1.bp.blogspot.com/-fb_JwwRq2lg/VqabJrY5eWI/AAAAAAAABsQ/lSzlEsGbzN0/s400/img_02.png" width="400"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;O múltiples gráficas:&lt;br&gt;&lt;br&gt;&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;x &lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt; linspace(&lt;span class="dv" style="color: #40a070;"&gt;0&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;10&lt;/span&gt;)&lt;br&gt;y1 &lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt; exp(&lt;span class="fl" style="color: #40a070;"&gt;0.1&lt;/span&gt;&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;x)&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;cos(x)&lt;br&gt;y2 &lt;span class="op" style="color: #666666;"&gt;=&lt;/span&gt; exp(&lt;span class="fl" style="color: #40a070;"&gt;0.5&lt;/span&gt;&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;x)&lt;span class="op" style="color: #666666;"&gt;*&lt;/span&gt;sin(x)&lt;br&gt;&lt;br&gt;subplot(&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;)&lt;br&gt;plot(x,y1,&lt;span class="st" style="color: #4070a0;"&gt;'r'&lt;/span&gt;)&lt;br&gt;ylabel(&lt;span class="st" style="color: #4070a0;"&gt;"Amplitud (mm)"&lt;/span&gt;)&lt;br&gt;grid(&lt;span class="va" style="color: #19177c;"&gt;True&lt;/span&gt;)&lt;br&gt;&lt;br&gt;subplot(&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;1&lt;/span&gt;,&lt;span class="dv" style="color: #40a070;"&gt;2&lt;/span&gt;)&lt;br&gt;plot(x,y2,&lt;span class="st" style="color: #4070a0;"&gt;'b'&lt;/span&gt;)&lt;br&gt;xlabel(&lt;span class="st" style="color: #4070a0;"&gt;"Tiempo (s)"&lt;/span&gt;)&lt;br&gt;ylabel(&lt;span class="st" style="color: #4070a0;"&gt;"Amplitud (mm)"&lt;/span&gt;)&lt;br&gt;grid(&lt;span class="va" style="color: #19177c;"&gt;True&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-q9a1e8lJMJM/Vqae9KNX6TI/AAAAAAAABsw/_4DjbfMXJhg/s1600/img_03.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="300" src="https://2.bp.blogspot.com/-q9a1e8lJMJM/Vqae9KNX6TI/AAAAAAAABsw/_4DjbfMXJhg/s400/img_03.png" width="400"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;</description><category>mathjax</category><category>matplotlib</category><category>numpy</category><category>pylab</category><guid>https://numython.github.io/posts/2016/01/una-introduccion-pylab/</guid><pubDate>Tue, 26 Jan 2016 03:42:00 GMT</pubDate></item></channel></rss>